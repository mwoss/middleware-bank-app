// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.1
//
// <auto-generated>
//
// Generated from file `bankClient.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package generated.bankClient;

public class Credit extends com.zeroc.Ice.Value
{
    public Credit()
    {
        this.currencyType = CurrencyType.PLN;
    }

    public Credit(double cost, Date startDate, Date endDate, CurrencyType currencyType)
    {
        this.cost = cost;
        this.startDate = startDate;
        this.endDate = endDate;
        this.currencyType = currencyType;
    }

    public double cost;

    public Date startDate;

    public Date endDate;

    public CurrencyType currencyType;

    public Credit clone()
    {
        return (Credit)super.clone();
    }

    public static String ice_staticId()
    {
        return "::bankClient::Credit";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    public static final long serialVersionUID = 1434179800L;

    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeDouble(cost);
        ostr_.writeValue(startDate);
        ostr_.writeValue(endDate);
        CurrencyType.ice_write(ostr_, currencyType);
        ostr_.endSlice();
    }

    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        cost = istr_.readDouble();
        istr_.readValue(v -> startDate = v, Date.class);
        istr_.readValue(v -> endDate = v, Date.class);
        currencyType = CurrencyType.ice_read(istr_);
        istr_.endSlice();
    }
}
